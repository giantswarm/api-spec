machine:
    services:
        - docker

test:
    pre:
        - make test
    override:
        # build the docserver docker image
        - docker build -t registry.giantswarm.io/$CIRCLE_PROJECT_USERNAME/$CIRCLE_PROJECT_REPONAME-docserver:$CIRCLE_SHA1 -f docserver/Dockerfile .
        # sanity check
        - docker run -d -p 8000:8000 registry.giantswarm.io/$CIRCLE_PROJECT_USERNAME/$CIRCLE_PROJECT_REPONAME-docserver:$CIRCLE_SHA1
        - curl http://localhost:8000 | grep "rebilly.github.io/ReDoc"

deployment:
    master:
        branch: master
        commands:
            # push the docker image
            - docker login --email=$DOCKER_EMAIL --username=$DOCKER_USERNAME --password="$DOCKER_PASSWORD" registry.giantswarm.io
            - docker push registry.giantswarm.io/$CIRCLE_PROJECT_USERNAME/$CIRCLE_PROJECT_REPONAME-docserver:$CIRCLE_SHA1
            # fetch and configure kubectl
            - curl --silent --max-time 60 --remote-name https://storage.googleapis.com/kubernetes-release/release/v1.5.1/bin/linux/amd64/kubectl && chmod +x ./kubectl
            - echo -n $G8S_CA | base64 --decode > ./ca.pem
            - echo -n $G8S_CRT | base64 --decode > ./crt.pem
            - echo -n $G8S_KEY | base64 --decode > ./key.pem
            - ./kubectl config set-cluster g8s-cluster --server=https://api.g8s.fra-1.giantswarm.io --certificate-authority=./ca.pem
            - ./kubectl config set-credentials g8s-admin --certificate-authority=./ca.pem --client-certificate=./crt.pem --client-key=./key.pem
            - ./kubectl config set-context g8s-system --cluster=g8s-cluster --user=g8s-admin
            - ./kubectl config use-context g8s-system
            - ./kubectl cluster-info
            # update the manifests with the tag, apply the new manifests, and watch the rollout
            - sed -i "s/%%DOCKER_TAG%%/$CIRCLE_SHA1/g" ./docserver/kubernetes/deployment.yaml
            # set the service name ending to "-master"
            - sed -i "s/%%SLUG%%/master/g" ./docserver/kubernetes/*
            # use root path for serving
            - sed -i "s:%%PATH%%:/:g" ./docserver/kubernetes/ingress.yaml
            - ./kubectl apply --namespace=$CIRCLE_PROJECT_USERNAME -f ./docserver/kubernetes/
            - ./kubectl rollout --namespace=$CIRCLE_PROJECT_USERNAME status deployment/$CIRCLE_PROJECT_REPONAME-docserver-master
    staging:
        # this will apply to all branches not named "master"
        branch: /.*/
        commands:
            # push the docker image
            - docker login --email=$DOCKER_EMAIL --username=$DOCKER_USERNAME --password="$DOCKER_PASSWORD" registry.giantswarm.io
            - docker push registry.giantswarm.io/$CIRCLE_PROJECT_USERNAME/$CIRCLE_PROJECT_REPONAME-docserver:$CIRCLE_SHA1
            # fetch and configure kubectl
            - curl --silent --max-time 60 --remote-name https://storage.googleapis.com/kubernetes-release/release/v1.5.1/bin/linux/amd64/kubectl && chmod +x ./kubectl
            - echo -n $G8S_CA | base64 --decode > ./ca.pem
            - echo -n $G8S_CRT | base64 --decode > ./crt.pem
            - echo -n $G8S_KEY | base64 --decode > ./key.pem
            - ./kubectl config set-cluster g8s-cluster --server=https://api.g8s.fra-1.giantswarm.io --certificate-authority=./ca.pem
            - ./kubectl config set-credentials g8s-admin --certificate-authority=./ca.pem --client-certificate=./crt.pem --client-key=./key.pem
            - ./kubectl config set-context g8s-system --cluster=g8s-cluster --user=g8s-admin
            - ./kubectl config use-context g8s-system
            - ./kubectl cluster-info
            # update the manifests with the tag, apply the new manifests, and watch the rollout
            - sed -i "s/%%DOCKER_TAG%%/$CIRCLE_SHA1/g" ./docserver/kubernetes/*
            # set the service name ending to "-staging"
            - sed -i "s/%%SLUG%%/staging/g" ./docserver/kubernetes/*
            # use root path for serving
            - sed -i "s:%%PATH%%:/$CIRCLE_BRANCH/:g" ./docserver/kubernetes/ingress.yaml
            - ./kubectl apply --namespace=$CIRCLE_PROJECT_USERNAME -f ./docserver/kubernetes/
            - ./kubectl rollout --namespace=$CIRCLE_PROJECT_USERNAME status deployment/$CIRCLE_PROJECT_REPONAME-docserver-staging
